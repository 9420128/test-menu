
document.querySelector('#d')
document.getElementById('d')

el.textContent
el.innerHTML
el.insertAdjacentHTML('afterbegin', html)
                       'afterbegin': сразу после открывающего тега  el (перед первым потомком).
                       'beforebegin': до самого element (до открывающего тега)
                       'beforeend': сразу перед закрывающим тегом element
                       'afterend': после element (после закрывающего тега)

el.remove() : Удалииз DOM

el.children – только дочерние узлы-элементы, то есть соответствующие тегам.
el.firstElementChild
el.lastElementChild – соответственно, первый и последний дети-элементы.
el.previousElementSibling, nextElementSibling – соседи-элементы.
el.parentElement – родитель-элемент.

isNaN(el)

Math.floor(el) // округление

el.toFixed(2)

e.target.classList.add
                  .contains  // проверка наличия класса
                  .toggle

el.checked  //checkbox

el.tagName  // название тега

return [
      block('text'),
      block('title')
    ].join('')

const newBlock = type === 'text'
      ? new TextBlock(value, {styles})
      : new TitleBlock(value, {styles})

$go.setAttribute('disabled', 'true') // button

arr.push(...items) – добавляет элементы в конец,
arr.pop() – извлекает элемент из конца,
arr.shift() – извлекает элемент из начала,
arr.unshift(...items) – добавляет элементы в начало
arr.splice(str) - удаляет элемент из массива

JSON.parse(text) // разбирает строку
JSON.stringify() преобразует значение JavaScript в строку JSON

arr = arr.filter(function (x) {
    return x !== undefined && x !== null         // убирает из массива пустые значения
})
